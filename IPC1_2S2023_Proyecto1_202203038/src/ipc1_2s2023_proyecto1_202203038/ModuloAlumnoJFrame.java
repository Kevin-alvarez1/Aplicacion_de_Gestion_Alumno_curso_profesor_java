/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ipc1_2s2023_proyecto1_202203038;

import static ipc1_2s2023_proyecto1_202203038.CursoPlantillaModuloProfe.vectorAlumnosAsignadosAsignados;
import static ipc1_2s2023_proyecto1_202203038.LoginAlumnoJframe.vectorParaCrearBotonesAlumno;
import static ipc1_2s2023_proyecto1_202203038.LoginProfesores.vectorParaCrearBotones;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Player
 */
public class ModuloAlumnoJFrame extends javax.swing.JFrame implements Serializable {
    /**
     * Creates new form ModuloAlumnoJFrame
     */
    public ModuloAlumnoJFrame() {
        initComponents();
        //encontrarCursosAlumno(vectorAlumnosAsignadosAsignados, vectorParaCrearBotonesAlumno);
        
     this.crearBotonesSegunRepeticion2(vectorParaCrearBotonesAlumno);
     this.setLocationRelativeTo(null);
     this.setResizable(false); 
       this.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosing(WindowEvent e){
        Appdata.serializar();
        }
    });
    }
    public static Vector<Vector<String>> vectorCursosAlumno = new Vector<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ActualizarDatosAlumnoBoton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ActualizarDatosBoton = new javax.swing.JButton();
        RegresarMenuBoton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2alu = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));

        ActualizarDatosAlumnoBoton.setText("Actualizar Datos");
        ActualizarDatosAlumnoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarDatosAlumnoBotonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cursos Asignados");

        ActualizarDatosBoton.setText("Actualizar Botones");

        RegresarMenuBoton.setText("cerrar sesion");
        RegresarMenuBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarMenuBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2aluLayout = new javax.swing.GroupLayout(jPanel2alu);
        jPanel2alu.setLayout(jPanel2aluLayout);
        jPanel2aluLayout.setHorizontalGroup(
            jPanel2aluLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 561, Short.MAX_VALUE)
        );
        jPanel2aluLayout.setVerticalGroup(
            jPanel2aluLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 384, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel2alu);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ActualizarDatosBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RegresarMenuBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 361, Short.MAX_VALUE)
                        .addComponent(ActualizarDatosAlumnoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActualizarDatosAlumnoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActualizarDatosBoton)
                    .addComponent(RegresarMenuBoton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  
    private void RegresarMenuBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarMenuBotonActionPerformed
   // Iterar sobre vectorParaCrearBotonesAlumno
    for (Vector<String> filaCurso : vectorParaCrearBotonesAlumno) {
        // Verificar que filaCurso tenga al menos 3 elementos y que la posición 2 sea "Online"
        if (filaCurso.size() >= 3 && "Online".equals(filaCurso.get(2))) {
            filaCurso.set(2, "Offline");
        }
    }

    // Imprimir el vector para verificar (opcional)
    for (Vector<String> elemento : vectorParaCrearBotonesAlumno) {
        for (String valor : elemento) {
            System.out.print(valor + " "); // Mostrar cada valor separado por un espacio
        }
        System.out.println(); // Nueva línea para separar cada elemento del vector
    }

    this.dispose();
    }//GEN-LAST:event_RegresarMenuBotonActionPerformed

    private void ActualizarDatosAlumnoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarDatosAlumnoBotonActionPerformed
        // TODO add your handling code here:
        ActualizarAlumnosModulo Aparece3 = new ActualizarAlumnosModulo();
        Aparece3.setVisible(true);
    }//GEN-LAST:event_ActualizarDatosAlumnoBotonActionPerformed

public void crearBotonesSegunRepeticion2(Vector<Vector<String>> vectorParaCrearBotonesAlumno) {
    int coordenadaX = 30;
    int coordenadaY = 60;

    // Iterar sobre vectorParaCrearBotones para crear los botones
    for (int i = 0; i < vectorParaCrearBotonesAlumno.size(); i++) {
        Vector<String> datosCurso = vectorParaCrearBotonesAlumno.get(i);

        // Verificar si hay suficientes elementos en datosCurso
        if (datosCurso.size() >= 4) {
            // Verificar si la posición 2 contiene "Online" y la posición 3 no contiene "Offline"
            if ("Online".equals(datosCurso.get(2)) && !"Offline".equals(datosCurso.get(2))) {
                String nombreCurso2 = datosCurso.get(3); // Nombre del curso en la posición 3

                // Comprobar si el curso ya ha sido procesado
                boolean cursoProcesado = false;
                for (int j = 0; j < i; j++) {
                    Vector<String> cursoAnterior = vectorParaCrearBotonesAlumno.get(j);
                    if (cursoAnterior.size() >= 4) {
                        String nombreCurso2Anterior = cursoAnterior.get(3);
                        if (nombreCurso2.equals(nombreCurso2Anterior)) {
                            cursoProcesado = true;
                            break;
                        }
                    }
                }

                // Si el curso ya ha sido procesado, continuamos con la siguiente iteración
                if (cursoProcesado) {
                    continue;
                }

                // Contar cuántas veces se repite ese valor (nombreCurso2)
                int cantidadRepeticiones = contarRepeticiones(vectorParaCrearBotonesAlumno, nombreCurso2);

                // Crear un botón para cada repetición
                for (int j = 0; j < cantidadRepeticiones; j++) {
                    JButton botonCurso2 = new JButton(nombreCurso2);
                    botonCurso2.setBounds(coordenadaX, coordenadaY, 90, 50);

                    System.out.println("este es nombreCurso2: " + nombreCurso2);

                    // Agregar una acción al presionar el botón
                    botonCurso2.addActionListener(new ActionListener() {
                        public void actionPerformed(ActionEvent e) {
                            // Obtener el nombre del curso del botón
                            String nombreCurso2 = ((JButton) e.getSource()).getText();

                            // Crear una instancia de la plantilla del curso
                            CursoAlumnoPlantilla ApareceP = new CursoAlumnoPlantilla();

                            // Llenar la plantilla con los datos correspondientes
                            llenarPlantillaAlumno(ApareceP, nombreCurso2, nombreCurso2);

                            // Mostrar la plantilla del curso
                            ApareceP.setVisible(true);
                        }
                    });

                    // Agregar el botón y la etiqueta al panel de botones
                    jPanel2alu.add(botonCurso2);

                    // Ajusta las coordenadas X e Y para la próxima iteración
                    coordenadaX += 100;

                    // Comprueba si coordenadaX supera 550 y ajusta las coordenadas
                    if (coordenadaX >= 550) {
                        coordenadaX = 30;
                        coordenadaY += 80;
                    }
                }
            }
        }
    }
    // Agregar el panel de botones al JScrollPane
    jScrollPane1.setViewportView(jPanel2alu);
}
private void llenarPlantillaAlumno(CursoAlumnoPlantilla plantilla2, String nombreCurso2, String descripcionCurso) {
    plantilla2.llenarPlantilla2(nombreCurso2, descripcionCurso);
}

// Método para contar las repeticiones de un valor en un vector de vectores
private int contarRepeticiones(Vector<Vector<String>> vectorParaCrearBotonesAlumno, String valorBuscado) {
    Set<String> valoresEncontrados = new HashSet<>();
    int contador = 0;

    for (Vector<String> datosCurso : vectorParaCrearBotonesAlumno) {
        // Verificar si hay suficientes elementos en datosCurso
        if (datosCurso.size() >= 4) {
            String nombreCurso2 = datosCurso.get(3);

            // Verificar si el valor ya ha sido encontrado
            if (!valoresEncontrados.contains(nombreCurso2) && nombreCurso2.equals(valorBuscado)) {
                contador++;
                valoresEncontrados.add(nombreCurso2); // Agregar el valor al conjunto
            }
        }
    }

    return contador;
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModuloAlumnoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModuloAlumnoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModuloAlumnoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModuloAlumnoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModuloAlumnoJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarDatosAlumnoBoton;
    private javax.swing.JButton ActualizarDatosBoton;
    private javax.swing.JButton RegresarMenuBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2alu;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
